name: Test and Deploy # The name will show under Workflows in my repo's GitHub Actions

# Define when to run the action.
on: # Defines when the workflow should be triggered.
  push: # We want to run tests wheneber we push to the main branch so
    branches: [ main ] # we set the push value's branches property to an array containing main.

# Workflow - made of one or many jobs
jobs:
  test:
    name: Test # Value given to name is visible when viewing the status of the workflow.
    runs-on: macos-latest # Type of machine to run the job on. Can also be run on ubuntu-latest or Windows Server.

    # List the steps we want to run for the job.
    steps: 
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16.x
    # Can also use 3rd parties eg with Elixir

    # Use run to install and test app :)
    - run: npm ci
    - run: npm test

  # Build Job
  build:
    name: Build and Deploy
    needs: test # This tells Github Actions to only run once the 'needs' job in this workflow completes successfully.
    runs-on: macos-latest

    # Extend the 'uses' value of 'checkout'.
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: use Node 16
        uses: actions/setup-node@v3
        with:
          node-version: 16.x

      # Install Railway CLI in Github Actions
      - name: Install Railway
        run: npm i -g @railway/cli

      # Finally deply app via the 'railway up' or 'railway run' command,
      # This will use the Dockerfile in the project root and build an image for the app.
      - name: Deploy
        run: railway up
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }} # Adding the 'env' with 'RAILWAY_TOKEN' supplies this token from your repo secrets to enable your building the app via Github Actions.
      